<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.olixc.todo.repository.TodoRepositoryTest" time="4.121" tests="15" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="25"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/user/.iamolix/k8s/kubernetes-the-hard-way1/todo-api/target/test-classes:/Users/user/.iamolix/k8s/kubernetes-the-hard-way1/todo-api/target/classes:/Users/user/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.0/spring-boot-starter-web-3.2.0.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.0/spring-boot-starter-3.2.0.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot/3.2.0/spring-boot-3.2.0.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.0/spring-boot-autoconfigure-3.2.0.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.0/spring-boot-starter-logging-3.2.0.jar:/Users/user/.m2/repository/ch/qos/logback/logback-classic/1.4.11/logback-classic-1.4.11.jar:/Users/user/.m2/repository/ch/qos/logback/logback-core/1.4.11/logback-core-1.4.11.jar:/Users/user/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/Users/user/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/Users/user/.m2/repository/org/slf4j/jul-to-slf4j/2.0.9/jul-to-slf4j-2.0.9.jar:/Users/user/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/user/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.0/spring-boot-starter-json-3.2.0.jar:/Users/user/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.3/jackson-databind-2.15.3.jar:/Users/user/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar:/Users/user/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.3/jackson-core-2.15.3.jar:/Users/user/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.3/jackson-datatype-jdk8-2.15.3.jar:/Users/user/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.3/jackson-datatype-jsr310-2.15.3.jar:/Users/user/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.3/jackson-module-parameter-names-2.15.3.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.0/spring-boot-starter-tomcat-3.2.0.jar:/Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.16/tomcat-embed-core-10.1.16.jar:/Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.16/tomcat-embed-websocket-10.1.16.jar:/Users/user/.m2/repository/org/springframework/spring-web/6.1.1/spring-web-6.1.1.jar:/Users/user/.m2/repository/org/springframework/spring-beans/6.1.1/spring-beans-6.1.1.jar:/Users/user/.m2/repository/io/micrometer/micrometer-observation/1.12.0/micrometer-observation-1.12.0.jar:/Users/user/.m2/repository/io/micrometer/micrometer-commons/1.12.0/micrometer-commons-1.12.0.jar:/Users/user/.m2/repository/org/springframework/spring-webmvc/6.1.1/spring-webmvc-6.1.1.jar:/Users/user/.m2/repository/org/springframework/spring-aop/6.1.1/spring-aop-6.1.1.jar:/Users/user/.m2/repository/org/springframework/spring-context/6.1.1/spring-context-6.1.1.jar:/Users/user/.m2/repository/org/springframework/spring-expression/6.1.1/spring-expression-6.1.1.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.2.0/spring-boot-starter-data-jpa-3.2.0.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.2.0/spring-boot-starter-aop-3.2.0.jar:/Users/user/.m2/repository/org/aspectj/aspectjweaver/1.9.20.1/aspectjweaver-1.9.20.1.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.2.0/spring-boot-starter-jdbc-3.2.0.jar:/Users/user/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/Users/user/.m2/repository/org/springframework/spring-jdbc/6.1.1/spring-jdbc-6.1.1.jar:/Users/user/.m2/repository/org/hibernate/orm/hibernate-core/6.3.1.Final/hibernate-core-6.3.1.Final.jar:/Users/user/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/user/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/user/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/Users/user/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/user/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/user/.m2/repository/com/fasterxml/classmate/1.6.0/classmate-1.6.0.jar:/Users/user/.m2/repository/net/bytebuddy/byte-buddy/1.14.10/byte-buddy-1.14.10.jar:/Users/user/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.4/jaxb-runtime-4.0.4.jar:/Users/user/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.4/jaxb-core-4.0.4.jar:/Users/user/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/Users/user/.m2/repository/org/glassfish/jaxb/txw2/4.0.4/txw2-4.0.4.jar:/Users/user/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/user/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/user/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/Users/user/.m2/repository/org/springframework/data/spring-data-jpa/3.2.0/spring-data-jpa-3.2.0.jar:/Users/user/.m2/repository/org/springframework/data/spring-data-commons/3.2.0/spring-data-commons-3.2.0.jar:/Users/user/.m2/repository/org/springframework/spring-orm/6.1.1/spring-orm-6.1.1.jar:/Users/user/.m2/repository/org/springframework/spring-tx/6.1.1/spring-tx-6.1.1.jar:/Users/user/.m2/repository/org/slf4j/slf4j-api/2.0.9/slf4j-api-2.0.9.jar:/Users/user/.m2/repository/org/springframework/spring-aspects/6.1.1/spring-aspects-6.1.1.jar:/Users/user/.m2/repository/org/postgresql/postgresql/42.6.0/postgresql-42.6.0.jar:/Users/user/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.2.0/spring-boot-starter-validation-3.2.0.jar:/Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.16/tomcat-embed-el-10.1.16.jar:/Users/user/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/Users/user/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.2.0/spring-boot-starter-test-3.2.0.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot-test/3.2.0/spring-boot-test-3.2.0.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.2.0/spring-boot-test-autoconfigure-3.2.0.jar:/Users/user/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/Users/user/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.1/jakarta.xml.bind-api-4.0.1.jar:/Users/user/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/Users/user/.m2/repository/net/minidev/json-smart/2.5.0/json-smart-2.5.0.jar:/Users/user/.m2/repository/net/minidev/accessors-smart/2.5.0/accessors-smart-2.5.0.jar:/Users/user/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/Users/user/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/Users/user/.m2/repository/org/awaitility/awaitility/4.2.0/awaitility-4.2.0.jar:/Users/user/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/user/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.1/junit-jupiter-5.10.1.jar:/Users/user/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.1/junit-jupiter-api-5.10.1.jar:/Users/user/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/user/.m2/repository/org/junit/platform/junit-platform-commons/1.10.1/junit-platform-commons-1.10.1.jar:/Users/user/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/user/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.1/junit-jupiter-params-5.10.1.jar:/Users/user/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.1/junit-jupiter-engine-5.10.1.jar:/Users/user/.m2/repository/org/junit/platform/junit-platform-engine/1.10.1/junit-platform-engine-1.10.1.jar:/Users/user/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/Users/user/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.10/byte-buddy-agent-1.14.10.jar:/Users/user/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/user/.m2/repository/org/mockito/mockito-junit-jupiter/5.7.0/mockito-junit-jupiter-5.7.0.jar:/Users/user/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/user/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/user/.m2/repository/org/springframework/spring-core/6.1.1/spring-core-6.1.1.jar:/Users/user/.m2/repository/org/springframework/spring-jcl/6.1.1/spring-jcl-6.1.1.jar:/Users/user/.m2/repository/org/springframework/spring-test/6.1.1/spring-test-6.1.1.jar:/Users/user/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/Users/user/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:"/>
    <property name="java.vm.vendor" value="Homebrew"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="user.timezone" value="Africa/Lagos"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="25"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="/opt/homebrew/Cellar/openjdk/25/libexec/openjdk.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/user/.iamolix/k8s/kubernetes-the-hard-way1/todo-api/target/surefire/surefirebooter-20250927045836184_3.jar /Users/user/.iamolix/k8s/kubernetes-the-hard-way1/todo-api/target/surefire 2025-09-27T04-58-36_115-jvmRun1 surefire-20250927045836184_1tmp surefire_0-20250927045836184_2tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="test" value="TodoServiceTest,TodoRepositoryTest,TodoApiIntegrationTest"/>
    <property name="surefire.test.class.path" value="/Users/user/.iamolix/k8s/kubernetes-the-hard-way1/todo-api/target/test-classes:/Users/user/.iamolix/k8s/kubernetes-the-hard-way1/todo-api/target/classes:/Users/user/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.0/spring-boot-starter-web-3.2.0.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.0/spring-boot-starter-3.2.0.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot/3.2.0/spring-boot-3.2.0.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.0/spring-boot-autoconfigure-3.2.0.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.0/spring-boot-starter-logging-3.2.0.jar:/Users/user/.m2/repository/ch/qos/logback/logback-classic/1.4.11/logback-classic-1.4.11.jar:/Users/user/.m2/repository/ch/qos/logback/logback-core/1.4.11/logback-core-1.4.11.jar:/Users/user/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/Users/user/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/Users/user/.m2/repository/org/slf4j/jul-to-slf4j/2.0.9/jul-to-slf4j-2.0.9.jar:/Users/user/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/user/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.0/spring-boot-starter-json-3.2.0.jar:/Users/user/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.3/jackson-databind-2.15.3.jar:/Users/user/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar:/Users/user/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.3/jackson-core-2.15.3.jar:/Users/user/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.3/jackson-datatype-jdk8-2.15.3.jar:/Users/user/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.3/jackson-datatype-jsr310-2.15.3.jar:/Users/user/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.3/jackson-module-parameter-names-2.15.3.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.0/spring-boot-starter-tomcat-3.2.0.jar:/Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.16/tomcat-embed-core-10.1.16.jar:/Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.16/tomcat-embed-websocket-10.1.16.jar:/Users/user/.m2/repository/org/springframework/spring-web/6.1.1/spring-web-6.1.1.jar:/Users/user/.m2/repository/org/springframework/spring-beans/6.1.1/spring-beans-6.1.1.jar:/Users/user/.m2/repository/io/micrometer/micrometer-observation/1.12.0/micrometer-observation-1.12.0.jar:/Users/user/.m2/repository/io/micrometer/micrometer-commons/1.12.0/micrometer-commons-1.12.0.jar:/Users/user/.m2/repository/org/springframework/spring-webmvc/6.1.1/spring-webmvc-6.1.1.jar:/Users/user/.m2/repository/org/springframework/spring-aop/6.1.1/spring-aop-6.1.1.jar:/Users/user/.m2/repository/org/springframework/spring-context/6.1.1/spring-context-6.1.1.jar:/Users/user/.m2/repository/org/springframework/spring-expression/6.1.1/spring-expression-6.1.1.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.2.0/spring-boot-starter-data-jpa-3.2.0.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.2.0/spring-boot-starter-aop-3.2.0.jar:/Users/user/.m2/repository/org/aspectj/aspectjweaver/1.9.20.1/aspectjweaver-1.9.20.1.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.2.0/spring-boot-starter-jdbc-3.2.0.jar:/Users/user/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/Users/user/.m2/repository/org/springframework/spring-jdbc/6.1.1/spring-jdbc-6.1.1.jar:/Users/user/.m2/repository/org/hibernate/orm/hibernate-core/6.3.1.Final/hibernate-core-6.3.1.Final.jar:/Users/user/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/user/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/user/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/Users/user/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/user/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/user/.m2/repository/com/fasterxml/classmate/1.6.0/classmate-1.6.0.jar:/Users/user/.m2/repository/net/bytebuddy/byte-buddy/1.14.10/byte-buddy-1.14.10.jar:/Users/user/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.4/jaxb-runtime-4.0.4.jar:/Users/user/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.4/jaxb-core-4.0.4.jar:/Users/user/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/Users/user/.m2/repository/org/glassfish/jaxb/txw2/4.0.4/txw2-4.0.4.jar:/Users/user/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/user/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/user/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/Users/user/.m2/repository/org/springframework/data/spring-data-jpa/3.2.0/spring-data-jpa-3.2.0.jar:/Users/user/.m2/repository/org/springframework/data/spring-data-commons/3.2.0/spring-data-commons-3.2.0.jar:/Users/user/.m2/repository/org/springframework/spring-orm/6.1.1/spring-orm-6.1.1.jar:/Users/user/.m2/repository/org/springframework/spring-tx/6.1.1/spring-tx-6.1.1.jar:/Users/user/.m2/repository/org/slf4j/slf4j-api/2.0.9/slf4j-api-2.0.9.jar:/Users/user/.m2/repository/org/springframework/spring-aspects/6.1.1/spring-aspects-6.1.1.jar:/Users/user/.m2/repository/org/postgresql/postgresql/42.6.0/postgresql-42.6.0.jar:/Users/user/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.2.0/spring-boot-starter-validation-3.2.0.jar:/Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.16/tomcat-embed-el-10.1.16.jar:/Users/user/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/Users/user/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.2.0/spring-boot-starter-test-3.2.0.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot-test/3.2.0/spring-boot-test-3.2.0.jar:/Users/user/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.2.0/spring-boot-test-autoconfigure-3.2.0.jar:/Users/user/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/Users/user/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.1/jakarta.xml.bind-api-4.0.1.jar:/Users/user/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/Users/user/.m2/repository/net/minidev/json-smart/2.5.0/json-smart-2.5.0.jar:/Users/user/.m2/repository/net/minidev/accessors-smart/2.5.0/accessors-smart-2.5.0.jar:/Users/user/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/Users/user/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/Users/user/.m2/repository/org/awaitility/awaitility/4.2.0/awaitility-4.2.0.jar:/Users/user/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/user/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.1/junit-jupiter-5.10.1.jar:/Users/user/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.1/junit-jupiter-api-5.10.1.jar:/Users/user/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/user/.m2/repository/org/junit/platform/junit-platform-commons/1.10.1/junit-platform-commons-1.10.1.jar:/Users/user/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/user/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.1/junit-jupiter-params-5.10.1.jar:/Users/user/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.1/junit-jupiter-engine-5.10.1.jar:/Users/user/.m2/repository/org/junit/platform/junit-platform-engine/1.10.1/junit-platform-engine-1.10.1.jar:/Users/user/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/Users/user/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.10/byte-buddy-agent-1.14.10.jar:/Users/user/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/user/.m2/repository/org/mockito/mockito-junit-jupiter/5.7.0/mockito-junit-jupiter-5.7.0.jar:/Users/user/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/user/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/user/.m2/repository/org/springframework/spring-core/6.1.1/spring-core-6.1.1.jar:/Users/user/.m2/repository/org/springframework/spring-jcl/6.1.1/spring-jcl-6.1.1.jar:/Users/user/.m2/repository/org/springframework/spring-test/6.1.1/spring-test-6.1.1.jar:/Users/user/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/Users/user/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/user"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-09-16"/>
    <property name="java.home" value="/opt/homebrew/Cellar/openjdk/25/libexec/openjdk.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/user/.iamolix/k8s/kubernetes-the-hard-way1/todo-api"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="apple.awt.application.name" value="ForkedBooter"/>
    <property name="surefire.real.class.path" value="/Users/user/.iamolix/k8s/kubernetes-the-hard-way1/todo-api/target/surefire/surefirebooter-20250927045836184_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="25"/>
    <property name="user.name" value="user"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="15.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Homebrew"/>
    <property name="localRepository" value="/Users/user/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="java.io.tmpdir" value="/var/folders/qk/pspxs7b17lz79tzg882fgylr0000gn/T/"/>
    <property name="java.version" value="25"/>
    <property name="user.dir" value="/Users/user/.iamolix/k8s/kubernetes-the-hard-way1/todo-api"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="56375"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/user/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Homebrew"/>
    <property name="java.vm.version" value="25"/>
    <property name="stdin.encoding" value="UTF-8"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="69.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[todo-api-test] "/>
  </properties>
  <testcase name="save_ShouldPersistNewTodo" classname="com.olixc.todo.repository.TodoRepositoryTest" time="0.678">
    <system-out><![CDATA[04:58:36.758 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.olixc.todo.repository.TodoRepositoryTest]: TodoRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
04:58:36.842 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.olixc.todo.TodoApiApplication for test class com.olixc.todo.repository.TodoRepositoryTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.0)

2025-09-27T04:58:37.088+01:00  INFO 56375 --- [todo-api-test] [           main] c.o.todo.repository.TodoRepositoryTest   : Starting TodoRepositoryTest using Java 25 with PID 56375 (started by user in /Users/user/.iamolix/k8s/kubernetes-the-hard-way1/todo-api)
2025-09-27T04:58:37.089+01:00 DEBUG 56375 --- [todo-api-test] [           main] c.o.todo.repository.TodoRepositoryTest   : Running with Spring Boot v3.2.0, Spring v6.1.1
2025-09-27T04:58:37.089+01:00  INFO 56375 --- [todo-api-test] [           main] c.o.todo.repository.TodoRepositoryTest   : The following 1 profile is active: "test"
2025-09-27T04:58:37.315+01:00  INFO 56375 --- [todo-api-test] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-27T04:58:37.355+01:00  INFO 56375 --- [todo-api-test] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 33 ms. Found 1 JPA repository interface.
2025-09-27T04:58:37.402+01:00  INFO 56375 --- [todo-api-test] [           main] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2025-09-27T04:58:37.519+01:00  INFO 56375 --- [todo-api-test] [           main] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:fec87ed4-3cc6-402d-bf21-e1a7d610608b;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-09-27T04:58:37.736+01:00  INFO 56375 --- [todo-api-test] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-27T04:58:37.776+01:00  INFO 56375 --- [todo-api-test] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.3.1.Final
2025-09-27T04:58:37.799+01:00  INFO 56375 --- [todo-api-test] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-09-27T04:58:38.074+01:00  INFO 56375 --- [todo-api-test] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-27T04:58:38.153+01:00  WARN 56375 --- [todo-api-test] [           main] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-27T04:58:38.892+01:00  INFO 56375 --- [todo-api-test] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-27T04:58:38.902+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    drop table if exists todos cascade 
Hibernate: 
    drop table if exists todos cascade 
2025-09-27T04:58:38.908+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    create table todos (
        completed boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        title varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table todos (
        completed boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        title varchar(255) not null,
        primary key (id)
    )
2025-09-27T04:58:38.917+01:00  INFO 56375 --- [todo-api-test] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-27T04:58:39.268+01:00  INFO 56375 --- [todo-api-test] [           main] c.o.todo.repository.TodoRepositoryTest   : Started TodoRepositoryTest in 2.388 seconds (process running for 2.994)
2025-09-27T04:58:39.881+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:39.918+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:39.920+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:39.932+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
]]></system-out>
    <system-err><![CDATA[WARNING: A Java agent has been loaded dynamically (/Users/user/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.10/byte-buddy-agent-1.14.10.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
  </testcase>
  <testcase name="findAll_ShouldReturnAllTodos" classname="com.olixc.todo.repository.TodoRepositoryTest" time="0.11">
    <system-out><![CDATA[2025-09-27T04:58:39.959+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:39.964+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:39.966+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.060+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.completed,
        t1_0.created_at,
        t1_0.description,
        t1_0.title,
        t1_0.updated_at 
    from
        todos t1_0
Hibernate: 
    select
        t1_0.id,
        t1_0.completed,
        t1_0.created_at,
        t1_0.description,
        t1_0.title,
        t1_0.updated_at 
    from
        todos t1_0
]]></system-out>
  </testcase>
  <testcase name="findByCompleted_WhenCompletedFalse_ShouldReturnPendingTodos" classname="com.olixc.todo.repository.TodoRepositoryTest" time="0.054">
    <system-out><![CDATA[2025-09-27T04:58:40.071+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.086+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.088+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.116+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.completed,
        t1_0.created_at,
        t1_0.description,
        t1_0.title,
        t1_0.updated_at 
    from
        todos t1_0 
    where
        t1_0.completed=?
Hibernate: 
    select
        t1_0.id,
        t1_0.completed,
        t1_0.created_at,
        t1_0.description,
        t1_0.title,
        t1_0.updated_at 
    from
        todos t1_0 
    where
        t1_0.completed=?
]]></system-out>
  </testcase>
  <testcase name="existsById_WhenTodoExists_ShouldReturnTrue" classname="com.olixc.todo.repository.TodoRepositoryTest" time="0.31">
    <system-out><![CDATA[2025-09-27T04:58:40.127+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.129+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.130+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.425+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        todos t1_0 
    where
        t1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        todos t1_0 
    where
        t1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="findById_WhenTodoDoesNotExist_ShouldReturnEmpty" classname="com.olixc.todo.repository.TodoRepositoryTest" time="0.021">
    <system-out><![CDATA[2025-09-27T04:58:40.445+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.448+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.450+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.457+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.completed,
        t1_0.created_at,
        t1_0.description,
        t1_0.title,
        t1_0.updated_at 
    from
        todos t1_0 
    where
        t1_0.id=?
Hibernate: 
    select
        t1_0.id,
        t1_0.completed,
        t1_0.created_at,
        t1_0.description,
        t1_0.title,
        t1_0.updated_at 
    from
        todos t1_0 
    where
        t1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="deleteById_ShouldRemoveTodo" classname="com.olixc.todo.repository.TodoRepositoryTest" time="0.022">
    <system-out><![CDATA[2025-09-27T04:58:40.465+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.472+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.473+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
]]></system-out>
  </testcase>
  <testcase name="findByTitleContainingIgnoreCase_ShouldReturnMatchingTodos" classname="com.olixc.todo.repository.TodoRepositoryTest" time="0.079">
    <system-out><![CDATA[2025-09-27T04:58:40.510+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.517+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.523+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.535+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.completed,
        t1_0.created_at,
        t1_0.description,
        t1_0.title,
        t1_0.updated_at 
    from
        todos t1_0 
    where
        upper(t1_0.title) like upper(?) escape '\'
Hibernate: 
    select
        t1_0.id,
        t1_0.completed,
        t1_0.created_at,
        t1_0.description,
        t1_0.title,
        t1_0.updated_at 
    from
        todos t1_0 
    where
        upper(t1_0.title) like upper(?) escape '\'
]]></system-out>
  </testcase>
  <testcase name="findByCompletedFalse_ShouldReturnPendingTodos" classname="com.olixc.todo.repository.TodoRepositoryTest" time="0.054">
    <system-out><![CDATA[2025-09-27T04:58:40.592+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.599+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.600+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.612+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.completed,
        t1_0.created_at,
        t1_0.description,
        t1_0.title,
        t1_0.updated_at 
    from
        todos t1_0 
    where
        not(t1_0.completed)
Hibernate: 
    select
        t1_0.id,
        t1_0.completed,
        t1_0.created_at,
        t1_0.description,
        t1_0.title,
        t1_0.updated_at 
    from
        todos t1_0 
    where
        not(t1_0.completed)
]]></system-out>
  </testcase>
  <testcase name="findByCompletedTrue_ShouldReturnCompletedTodos" classname="com.olixc.todo.repository.TodoRepositoryTest" time="0.016">
    <system-out><![CDATA[2025-09-27T04:58:40.626+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.629+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.630+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.634+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.completed,
        t1_0.created_at,
        t1_0.description,
        t1_0.title,
        t1_0.updated_at 
    from
        todos t1_0 
    where
        t1_0.completed
Hibernate: 
    select
        t1_0.id,
        t1_0.completed,
        t1_0.created_at,
        t1_0.description,
        t1_0.title,
        t1_0.updated_at 
    from
        todos t1_0 
    where
        t1_0.completed
]]></system-out>
  </testcase>
  <testcase name="findByTitleContainingIgnoreCase_WithNoMatches_ShouldReturnEmptyList" classname="com.olixc.todo.repository.TodoRepositoryTest" time="0.021">
    <system-out><![CDATA[2025-09-27T04:58:40.647+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.650+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.651+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.658+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.completed,
        t1_0.created_at,
        t1_0.description,
        t1_0.title,
        t1_0.updated_at 
    from
        todos t1_0 
    where
        upper(t1_0.title) like upper(?) escape '\'
Hibernate: 
    select
        t1_0.id,
        t1_0.completed,
        t1_0.created_at,
        t1_0.description,
        t1_0.title,
        t1_0.updated_at 
    from
        todos t1_0 
    where
        upper(t1_0.title) like upper(?) escape '\'
]]></system-out>
  </testcase>
  <testcase name="findByTitleContainingIgnoreCase_WithCaseInsensitive_ShouldReturnMatchingTodos" classname="com.olixc.todo.repository.TodoRepositoryTest" time="0.021">
    <system-out><![CDATA[2025-09-27T04:58:40.668+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.672+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.675+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.682+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.completed,
        t1_0.created_at,
        t1_0.description,
        t1_0.title,
        t1_0.updated_at 
    from
        todos t1_0 
    where
        upper(t1_0.title) like upper(?) escape '\'
Hibernate: 
    select
        t1_0.id,
        t1_0.completed,
        t1_0.created_at,
        t1_0.description,
        t1_0.title,
        t1_0.updated_at 
    from
        todos t1_0 
    where
        upper(t1_0.title) like upper(?) escape '\'
]]></system-out>
  </testcase>
  <testcase name="existsById_WhenTodoDoesNotExist_ShouldReturnFalse" classname="com.olixc.todo.repository.TodoRepositoryTest" time="0.025">
    <system-out><![CDATA[2025-09-27T04:58:40.691+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.699+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.705+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.710+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        todos t1_0 
    where
        t1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        todos t1_0 
    where
        t1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="save_ShouldUpdateExistingTodo" classname="com.olixc.todo.repository.TodoRepositoryTest" time="0.019">
    <system-out><![CDATA[2025-09-27T04:58:40.723+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.725+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.727+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
]]></system-out>
  </testcase>
  <testcase name="findByCompleted_WhenCompletedTrue_ShouldReturnCompletedTodos" classname="com.olixc.todo.repository.TodoRepositoryTest" time="0.024">
    <system-out><![CDATA[2025-09-27T04:58:40.749+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.752+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.754+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.759+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.completed,
        t1_0.created_at,
        t1_0.description,
        t1_0.title,
        t1_0.updated_at 
    from
        todos t1_0 
    where
        t1_0.completed=?
Hibernate: 
    select
        t1_0.id,
        t1_0.completed,
        t1_0.created_at,
        t1_0.description,
        t1_0.title,
        t1_0.updated_at 
    from
        todos t1_0 
    where
        t1_0.completed=?
]]></system-out>
  </testcase>
  <testcase name="findById_WhenTodoExists_ShouldReturnTodo" classname="com.olixc.todo.repository.TodoRepositoryTest" time="0.014">
    <system-out><![CDATA[2025-09-27T04:58:40.768+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.772+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-09-27T04:58:40.773+01:00 DEBUG 56375 --- [todo-api-test] [           main] org.hibernate.SQL                        : 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        todos
        (completed, created_at, description, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
]]></system-out>
  </testcase>
</testsuite>